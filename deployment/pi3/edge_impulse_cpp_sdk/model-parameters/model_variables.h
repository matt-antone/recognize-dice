/*
 * Copyright (c) 2025 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://edgeimpulse.com/legal/terms-of-service) or Enterprise Terms of
 * Service (https://edgeimpulse.com/legal/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */

#ifndef _EI_CLASSIFIER_MODEL_VARIABLES_H_
#define _EI_CLASSIFIER_MODEL_VARIABLES_H_

/**
 * @file
 *  Auto-generated complete impulse definitions. The ei_impulse_handle_t should
 *  be passed to ei_run_classifier() function to use this specific impulse.
 *  This file should only be included in ei_run_classifier.h file.
 */

#include <stdint.h>
#include "model_metadata.h"

#include "tflite-model/tflite_learn_3_compiled.h"
#include "edge-impulse-sdk/classifier/ei_model_types.h"
#include "edge-impulse-sdk/classifier/inferencing_engines/engines.h"

const char* ei_classifier_inferencing_categories[] = { "0BrzNN9qMnzQlQPZ1sso", "1W3kCdCcSnq0jkQiZZ00", "1XPc36ZuLHMLotkAKZfP", "1YO2nsEEBcYqrlqAjWnN", "1bq71k3UzSwfjl92NWoE", "1dRQgfot47CoYg4LXtcM", "1dtjooCYlexEbdq5MFnj", "1obZeGiMS68DhdoK1fE8", "28xg7NE6BFiIG00ntjUj", "2Jdc4WkHh9HYffuZeHnQ", "2Wyy0t12ncx6iSU9TLYY", "2b8Pg6CIBTv9ENExsdHj", "2cvr7g3s05VHPioOgDU0", "2tBgEoN8m2tkfArf5WxK", "2tGrB7B3Uu5vBHiezJX6", "38HYTY0rI2GiEkyN1HmB", "3O659AL0r3CVndX9Lj2P", "3SaaOzF1tTiQifxHmHYH", "4DARx0NxPQLclN9yd8CB", "4MzDILAWSe33JKJ78VIS", "4kfY1a5pPXQ7TfcMAwXa", "4mWLfLTZ0iAl0CRaWgnZ", "4vCbLxjFV6O7TZhzcCAO", "52sGXFvnXjfFfUpgmrVP", "5NIJrjmnp8SHRnfSC40M", "5eKFklZ8VDJS5kUy72Eh", "5jGcX2cBrgSsKeCkoDse", "5kXKt6hnCJQNUOxT1DkR", "62CzEm7HrnXOIquNxVJq", "6S1A4XS9bWOy9H7flrT2", "6qLcpp0iBBObS3JLxMNg", "73j3oFsvuZDb4HqWn3rP", "74ofBupXxox1K9EjGT9y", "789SxHvkdAvzjsygnLl9", "7KvGIfDjI1AiaFKEgBwh", "7i3xKrynxkRRYLeHCtHN", "88SVyBzSwy8brLgTR4jG", "8TDl0PCRDH6KU1mWPhUr", "8WfJo4MtQH1mkFeEQBCQ", "8p1kzQ9DYaAxMhbmJwm4", "9QIAs0kA4i3E0MO0GYXN", "9WEX1G1K6TCWjOjwDY3k", "9vY9MaftT6SdFLxmZbPH", "AOQCmcuRHY3mGmLKm3bl", "AmcTYLAoUF9AFUvSg0Ha", "ApDrTqEWeaRm0SFUSAoU", "AuOnrLiDmUsYhAjgAl9A", "Awn9ftGNczT0xqrzTMPV", "B0UPlSV7CMxZEnfPDnCr", "BJcwVUvK37MMD011QYT2", "BehUsnXAcMecc974ixck", "Bl3LtrUqPuhoG6aTfRxY", "BxAydYWAVsOpLHlMOvHp", "C4sSEJFCDep4Zl5lp7CP", "CIeccxmzTaSmEpIAh72q", "CWMmCU53hQNuPda7Prnp", "CaNFcsqwQAcD8w40RjVY", "Cnjf8KedSPs9NxDQ7trI", "CtLMy5LSwBytezoanV0f", "CuJvlXAv4qia4t0iznxt", "CzjNIWk4cfzlYjn0IRmi", "DELxMtSz4hOdxD6qqO0z", "Dfusc69tqGURYMRcNHuf", "DqgCiR4w6YKE0aWShRPp", "EO9ONsN102b9BO1z5fe5", "EjyR12WefetvgMUeAMrU", "EqbL1qhQjcJwcigW04E7", "EsVPwD9rnZMc6IaCsHfm", "F4hwkNz9aBi3w4vIxOWj", "FDJvpnZKkzItfcPThzHC", "FRYQF5hJZdFiVx5uFtQV", "FXKNKH7RGfjdJJ5JEv7K", "Fc0lhJe3dS78U6tbgwAF", "FdsLQDj4cWjqOr0vTyra", "GAeFjlFYUHwWIb5s1G6D", "GJpP7OB9SC1FLpxcRfm9", "GNvEusMqCLCOCc8Bhs9s", "GdOBAQ9Mw0rsBhCvffBF", "GtYXub2kNnhYVrtauke4", "HDFIyiqrmobWqcIIL47t", "HIuRKggND8yCOJzNqHo5", "HZVI2BIdohEP4l7uSJR3", "HacEiKyjwSIacvQhbaYp", "HmCwZXh766NZvGl753X5", "HwcvMzyqpZYHRjlLL24K", "HxzZD6ee7UjmgTNkzfRq", "HyVilaEveG0uKEG9Au8l", "IDAaQKYtIaNpPZ1gpg0F", "IMG_0655_jpeg", "IMG_0656_jpeg", "IMG_0657_jpeg", "IMG_0658_jpeg", "IMG_0659_jpeg", "IMG_0660_jpeg", "IMG_0661_jpeg", "IMG_0662_jpeg", "IMG_0664_jpeg", "IMG_0665_jpeg", "IMG_0666_jpeg", "IMG_0668_jpeg", "IMG_0669_jpeg", "IMG_0670_jpeg", "IMG_0671_jpeg", "IMG_0672_jpeg", "IMG_0673_jpeg", "IMG_0674_jpeg", "IMG_0675_jpeg", "IMG_0676_jpeg", "IMG_0677_jpeg", "IMG_0678_jpeg", "IMG_0680_jpeg", "IMG_0681_jpeg", "IMG_0682_jpeg", "IMG_0683_jpeg", "IMG_0685_jpeg", "IMG_0686_jpeg", "IMG_0687_jpeg", "IMG_0688_jpeg", "IMG_0689_jpeg", "IMG_0690_jpeg", "IMG_0691_jpeg", "IMG_0692_jpeg", "IMG_0693_jpeg", "IMG_0694_jpeg", "IMG_0699_jpeg", "IMG_0701_jpeg", "IMG_0702_jpeg", "IMG_0703_jpeg", "IMG_0704_jpeg", "IMG_0705_jpeg", "IMG_0706_jpeg", "IMG_0707_jpeg", "IMG_0708_jpeg", "IMG_0709_jpeg", "IMG_0710_jpeg", "IMG_0711_jpeg", "IMG_0712_jpeg", "IMG_0713_jpeg", "IMG_0714_jpeg", "IMG_0715_jpeg", "IMG_0716_jpeg", "IMG_0717_jpeg", "IMG_0718_jpeg", "IMG_0719_jpeg", "IMG_0720_jpeg", "IMG_0721_jpeg", "IMG_0722_jpeg", "IMG_0725_jpeg", "IMG_0726_jpeg", "IMG_0727_jpeg", "IMG_0728_jpeg", "IMG_0729_jpeg", "IMG_0730_jpeg", "IMG_0731_jpeg", "IMG_0732_jpeg", "IMG_0733_jpeg", "IMG_0734_jpeg", "IMG_0735_jpeg", "IMG_0736_jpeg", "IMG_0737_jpeg", "IMG_0738_jpeg", "IMG_0739_jpeg", "IMG_0740_jpeg", "IMG_0741_jpeg", "IMG_0742_jpeg", "IMG_0743_jpeg", "IMG_0744_jpeg", "IMG_0745_jpeg", "IMG_0746_jpeg", "IMG_0748_jpeg", "IMG_0749_jpeg", "IMG_0750_jpeg", "IMG_0751_jpeg", "IMG_0752_jpeg", "IMG_0753_jpeg", "IMG_0754_jpeg", "IMG_0755_jpeg", "IMG_0758_jpeg", "IMG_0759_jpeg", "IMG_0760_jpeg", "IMG_0761_jpeg", "IMG_0762_jpeg", "IMG_0763_jpeg", "IMG_0764_jpeg", "IMG_0765_jpeg", "IMG_0766_jpeg", "IMG_0767_jpeg", "IMG_0770_jpeg", "IMG_0771_jpeg", "IMG_0772_jpeg", "IMG_0774_jpeg", "IMG_0775_jpeg", "IMG_0776_jpeg", "IMG_0777_jpeg", "IMG_0778_jpeg", "IMG_0781_jpeg", "IMG_0782_jpeg", "IMG_0783_jpeg", "IMG_0784_jpeg", "IMG_0786_jpeg", "IMG_0787_jpeg", "IMG_0788_jpeg", "IMG_0789_jpeg", "IMG_0790_jpeg", "IMG_0791_jpeg", "IMG_0792_jpeg", "IMG_0795_jpeg", "IMG_0797_jpeg", "IMG_0798_jpeg", "IMG_0799_jpeg", "IMG_0800_jpeg", "IMG_0802_jpeg", "IMG_0803_jpeg", "IMG_0804_jpeg", "IMG_0805_jpeg", "IMG_0806_jpeg", "IMG_0807_jpeg", "IMG_0808_jpeg", "IMG_0809_jpeg", "IMG_0812_jpeg", "IMG_0813_jpeg", "IMG_0814_jpeg", "IMG_0815_jpeg", "IMG_0816_jpeg", "IMG_0817_jpeg", "IMG_0818_jpeg", "IMG_0819_jpeg", "IMG_0820_jpeg", "IMG_0822_jpeg", "IMG_0823_jpeg", "IMG_0824_jpeg", "IMG_0825_jpeg", "IMG_0826_jpeg", "IMG_0827_jpeg", "IMG_0830_jpeg", "IMG_0831_jpeg", "IMG_0832_jpeg", "IMG_0833_jpeg", "IMG_0835_jpeg", "IMG_0836_jpeg", "IMG_0837_jpeg", "IMG_0840_jpeg", "IMG_0841_jpeg", "IMG_0842_jpeg", "IMG_0844_jpeg", "IMG_0845_jpeg", "IMG_0847_jpeg", "IZDCnjEOcK4LB3yXduEI", "Ib5doqjtB7uWp5zm2gs1", "ImwgKulGnaBho7trPGNf", "IoTJKkWzeJ86Ts6x0AeY", "IvUClP78063HbomfTo4O", "Izq6IlcwZOvDl9x9fzpM", "J0ZNvBqCgkWJXrGnLRMv", "JGlqORfRY5iRqHknJybO", "JKESS1liWp2QZMNjMTGX", "JVX1zWQbDLMTbAR1xvK4", "JWbFhb2w7EDdPf2hgoay", "JmOkmZVGFI8RAiXtqpq4", "JnWQV00XPJc7ZaQbWDAt", "Jre1X6ppq1Zzq2ghTRKo", "KbwVkTtIAC28JqBViIL9", "KwFBjevSzuSFOeRcXV8f", "KwZ2CLYwpiRDGXb24q8X", "LAAtI2l69o4dGbNgyYMr", "LdznjgFCtEQ1j3EFWEaJ", "M9Xs4RkZ8PJ2fHGwHo8q", "Mc6HjlrJRbHIn99tiJ7B", "NVONY9hdiGVJ6Z86cvuX", "Nk2cBH8QnWf0pFaFuhUu", "NkSCenEjnOIxJfzsJOTc", "Nw2oAPWzym5IptHaP5ND", "OBkrdzORH79yZKWwXWG9", "PMo0Pp3BVbyi5WcMYDy1", "PXU7we0tsxeLvskZXZLz", "PeUK4pkJXpaeYG4bVhbl", "Q5zd9YD2TNIdIleZHEcH", "QFpk1YrBy1f5zX3bUAuG", "QIKtyyF4IRcjhMCU2tBY", "QNexPI66x7c1z4jdOIHq", "QQqiJpE6XRDEs3OaZtmm", "Qh3nIZQgP3CHsHsJqvCN", "R60Jku1A79MPRZT77iLv", "R9eUradDglEL9CPExh7Y", "RMUZvLyqJf308sKCDCSE", "Rkt92NMvguBcTk5WS8WO", "RlbyrdLnkbE8jBTZ05Q7", "Rq5j7KC0FeQpjsk8BGEq", "RshDxLEmLDtuyfNfawe2", "RwOvtlopkWKUCKMgjvTV", "SJpTbuNkaOi1Os5niYh9", "SbOxrvQmmuBcqywX01Nx", "T4TdHric8XECoUnnVq0y", "T5TniMIdczzKl8zCQKN3", "TYboKry9wJABv876tC1Z", "TbCcAbIQT6SAsTfvwW6L", "TcpkJ5keOv7ZxxghbbhK", "TyZizdGvU0BSkrJ2BFVt", "U65BI6d6zPDHplgcQS63", "UCWxyJHpjz0bzR2O2xe0", "UsFqPmzGdDu2YONHcrOb", "Vg8cfAz6I39qWP26h1mr", "VnKpNiYHpldzYl1rYFoS", "Vwdl8ezuNrfc3p5skTT8", "WBuBgD1oBrZGDg0NHEeM", "WfKI6sH8gmbVQnEF63Ay", "WmKLjU6fMsWTccuk5FUB", "WpUkTrzhjEzrwUdZCyeM", "X1VIXH54XDpRgk8lREx5", "XgkTmUobgV75BZQckTIn", "XkL63Ouce4cUsqFtUN7o", "Xn7AoJKxtsnIs6rTg0hs", "Y6gMmGnxjEUL9Pb11IsM", "YTHT3xxJ21yOuJGH9XNB", "ZVl2Im6I3hZOdPa8qyHq", "ZeTcwkrRb3yDI3Ksb0eo", "Zj8Gf0fphtMgGLKS7VXC", "aCvk2jAuk5QeBw2DP1zJ", "aHaQkUGzOvowgjG2Y1HQ", "aNp4C8kCkQHqUAcghaVq", "aWppEmNOTUg7Cxznv5BS", "acHPiOP8c0AMX1pfQSgA", "arq1I6dVaCkjPrNIXgxm", "auikaH1aMj8ffZbZFFaM", "bJPZCYQAur2p1DR81ULo", "bWdTExMc9tlMDSSO3oTN", "bc9HHDNbY4oYY2Wu484r", "bl3sk3bwpQx6dRyPfXxE", "c0hDZjIX6wAnfECFcmDm", "cXmM2ph2RKqW6g4iBE5Y", "crzGnUmQeLEqiN4W2xck", "d75sab7nDfhKC2hN0Zav", "dK8p8vEClJa7OBQJMnyv", "dO631KWuKVK51l5TJgPW", "dSWpXr1xdsKIgr4gpSqO", "dX7b081RY2XaeVAdArxc", "dqg1mx6rNX91sXjefqQr", "dt4QsP8ote0P8r1lve3A", "eCcF55IPn5gcNhdPq4wt", "eD99Hq5RnRvsjWnRhENp", "eIyxMmkgpLGiFzweYqV9", "eUSZRgey7FvwlBbUQ086", "ebt8RgrmUsq7NMCYZiiC", "edrtvIJMS6BuWTF4u8os", "f7HdwMSkbQkWG3nbRrr8", "fKQVA8QBGdTU7rENPa4f", "fPK8SwZE6rIZJOojDVIM", "fU4mOrTJg31mPjobPehN", "fUcpL8cqTGqiPKtC5Djk", "g0M1Z16ldbz9k3V7rMPC", "gav4iupzPA7gOhL21Nx9", "gcMVH00crSEk9cegqjd4", "hBGHSHoJja4YOPqBN4P1", "hoCDfw5dAH04tusG7yvB", "i", "i5sOlgKdIR2AZUYCiBk0", "i8qdftfyBQrfiBlzyGXK", "iQhwvZP8pa6UaqAAQWrT", "iVaoN8R4D0CIE3A8XRCZ", "icwwB18bhdUFFFxrbvJA", "ih9sFKpsDYQ94maPKnQN", "ijrlBJSAuFTB5CmRbmMc", "j8u2VWGmKzah75tKE6RF", "jErddkKdiDTFPdAG0N2l", "jc6dR6bGNSCELrzNKkjm", "jo3JKLtXFwjncqw4BD3Q", "k7UnzkNpylGd2SyoZ3hI", "kS9HdJ6FsOi7ocrkwZz1", "l3xAKZUgxeHwauJpGvLK", "lKeMbsXKPcYbiZVwyusP", "lWfF3r8YISnZJOdRh8zG", "lpUa8c14erTzWZVuJPLz", "ltr0lzDEP4oEQeiis9uk", "lvVG58yY63S0vENhhDW0", "nAUrTJQJUYn08G8zMj6Z", "nT6jr0esdplSDuJKvz8O", "nVJizsbp7NIgdMYopaUG", "nnZvGAQ2HKPODWz16VdQ", "nqJX8OL8cdYNGDhpzxpy", "o75WDI5HK8XfoMid0bEe", "oeAtmR9InZOXURKlTB1J", "ofKZG8n9ApoQzBanxDZW", "oq99o4aSEDN5SPlJh9yd", "pBD26oW9vhW17bVARoEr", "pEf2vfeqUfRbtBmegKcP", "pJy0Ltkv5oZFc5GUpYDW", "pixhZwp4OYLJusxqTj2s", "puNpgvCaafvSUZatgfXn", "qDLnOBfqPLcxUUrQc2zL", "qQ4quN2OjTrJel5EqT3h", "qgckjIhSoG1K3enRfsWC", "qziLKMkmxD38zaPoivJM", "rEdT4p6ARghEDdrSH5a1", "rTgB49wgw1zlWFbK1vii", "rVDMZSGQEFquM6VvEKr4", "rblnpYig8bfJaxnte7KP", "rmABro2eqrCkHsiTy1SO", "rqO65MlIygzrkedws9PW", "sGVO3bPqwOBEnkGqqbjc", "sQTotFH65i5jxULBb2Gb", "stsk8J0eV45Ao8b6RH0G", "tSTrJzCPKxvkGfqMbEMU", "tYWp8OAy91h5JmPWIgUV", "tz1wq96qZkTsZAyxn3DU", "uCWftewHqpMjqJRaIN9V", "udrVq7i630aruaM6bLM4", "v7Ie8uCHJJ1zrTencvVX", "vBqyxG1wUOirjCBsmdEN", "vMhTbEYtZeN9MPTIH4Wb", "vOnNsOUKms57Ax8Yx3Mz", "vVVINFDjgUYfALQFpDwy", "vXlNnWro7FbSJMszeNPp", "vaCwZTtu7ETAPjy4hRxP", "vpe7tPSs0e2HXttFBhs0", "vz1CgKnOuWvwM8S14YDi", "w8jT2Y3QSkrJ48S4OGtH", "wTL7SDlmM967eKFYbpVT", "wXgSLJAUZ5WjvZOy9qiT", "wbVFGQTSY2D533a42Dg0", "x58xOMkb8U7CKNmRAjak", "xRbJIFATIX1gjhZNEsvV", "xYF5VeZJJ3TlUjORBZD2", "xZRVMNmdWUp0e9IKr8SH", "xapVXweSLYIvj1DfwWx9", "xeIUczLtIFD9M7EjE67e", "xgS3CM03ubrwAMmNoAHd", "xwIKjuHyB037T9hGaU9Q", "y2qvzrtPj15iQxEkz4HP", "yAmxK6Nt55ikXegSlClJ", "yEBT5Tsyccx4Q0oLt4xI", "yJqIamzxQGLLc4HcTTg2", "yRxEKXJp8jW8h3Q65ZAn", "yT7gGILRdZFGbpTjzS7N", "yWIrU162ZaBi3VUnwWVD", "yZ0kLOJ9Os2YSj9yjMGq", "yjgjcXwbA3D7Crz0iPOY", "yqexSUgZGl0aeb2YrrTf", "yt4O3Ie4QhnShJ0prP2K", "ywyfOs68bcu1gkyfnuvI", "z9loABL28CpTzWKQWMbl", "zDqldPMew6SRbgVrMh4g", "zHyxW62aZdnoyJewg0tV", "zPkAJWKLBcHfyCwPfB12", "zQjgwHxI3ZzrvRLPVYrD", "zbRDzZRgvKfMRbCj2mDy", "zcDdJ83uFyJdnSy8ITcG", "zdYhuzHS1d5dtxnIkb5H", "zoYU94l6w95JmizBxoS7" };

ei_dsp_named_axis_t ei_dsp_config_2_named_axes[] = {
    { .name = "Image", .axis = 0 }
};
size_t ei_dsp_config_2_named_axes_size = 1;
EI_CLASSIFIER_DSP_AXES_INDEX_TYPE ei_dsp_config_2_axes[] = { 0 };
const uint32_t ei_dsp_config_2_axes_size = 1;
ei_dsp_config_image_t ei_dsp_config_2 = {
    2, // uint32_t blockId
    1, // int implementationVersion
    1, // int length of axes
    ei_dsp_config_2_named_axes, // named axes
    ei_dsp_config_2_named_axes_size, // size of the named axes array
    "RGB" // select channels
};

const uint8_t ei_dsp_blocks_size = 1;
ei_model_dsp_t ei_dsp_blocks[ei_dsp_blocks_size] = {
    { // DSP block 2
        2,
        76800, // output size
        &extract_image_features, // DSP function pointer
        (void*)&ei_dsp_config_2, // pointer to config struct
        ei_dsp_config_2_axes, // array of offsets into the input stream, one for each axis
        ei_dsp_config_2_axes_size, // number of axes
        1, // version
        nullptr, // factory function
    }
};
const ei_config_tflite_eon_graph_t ei_config_tflite_graph_3 = {
    .implementation_version = 1,
    .model_init = &tflite_learn_3_init,
    .model_invoke = &tflite_learn_3_invoke,
    .model_reset = &tflite_learn_3_reset,
    .model_input = &tflite_learn_3_input,
    .model_output = &tflite_learn_3_output,
};

ei_learning_block_config_tflite_graph_t ei_learning_block_config_3 = {
    .implementation_version = 1,
    .classification_mode = EI_CLASSIFIER_CLASSIFICATION_MODE_CLASSIFICATION,
    .block_id = 3,
    .object_detection = 0,
    .object_detection_last_layer = EI_CLASSIFIER_LAST_LAYER_UNKNOWN,
    .output_data_tensor = 0,
    .output_labels_tensor = 1,
    .output_score_tensor = 2,
    .threshold = 0,
    .quantized = 1,
    .compiled = 1,
    .graph_config = (void*)&ei_config_tflite_graph_3
};

const uint8_t ei_learning_blocks_size = 1;
const uint32_t ei_learning_block_3_inputs[1] = { 2 };
const uint8_t ei_learning_block_3_inputs_size = 1;
const ei_learning_block_t ei_learning_blocks[ei_learning_blocks_size] = {
    {
        3,
        false,
        &run_nn_inference,
        (void*)&ei_learning_block_config_3,
        EI_CLASSIFIER_IMAGE_SCALING_NONE,
        ei_learning_block_3_inputs,
        ei_learning_block_3_inputs_size,
        448
    },
};

const size_t ei_postprocessing_blocks_size = 0;
const ei_postprocessing_block_t *ei_postprocessing_blocks = nullptr;

const ei_object_detection_nms_config_t ei_object_detection_nms = {
    0.0f, /* NMS confidence threshold */
    0.2f  /* NMS IOU threshold */
};

const ei_impulse_t impulse_711824_0 = {
    .project_id = 711824,
    .project_owner = "matt.antone",
    .project_name = "dicer",
    .impulse_id = 1,
    .impulse_name = "Impulse #1",
    .deploy_version = 1,

    .nn_input_frame_size = 76800,
    .raw_sample_count = 25600,
    .raw_samples_per_frame = 1,
    .dsp_input_frame_size = 25600 * 1,
    .input_width = 160,
    .input_height = 160,
    .input_frames = 1,
    .interval_ms = 1,
    .frequency = 0,
    .dsp_blocks_size = ei_dsp_blocks_size,
    .dsp_blocks = ei_dsp_blocks,
    
    .object_detection_count = 0,
    .fomo_output_size = 0,

    
    .visual_ad_grid_size_x = int((160 / 8) / 2 - 1),
    .visual_ad_grid_size_y = int((160 / 8) / 2 - 1),
    
    .tflite_output_features_count = 448,
    .learning_blocks_size = ei_learning_blocks_size,
    .learning_blocks = ei_learning_blocks,

    .postprocessing_blocks_size = ei_postprocessing_blocks_size,
    .postprocessing_blocks = ei_postprocessing_blocks,

    .inferencing_engine = EI_CLASSIFIER_TFLITE,

    .sensor = EI_CLASSIFIER_SENSOR_CAMERA,
    .fusion_string = "image",
    .slice_size = (25600/4),
    .slices_per_model_window = 4,

    .has_anomaly = EI_ANOMALY_TYPE_UNKNOWN,
    .label_count = 448,
    .categories = ei_classifier_inferencing_categories,
    .object_detection_nms = ei_object_detection_nms
};

ei_impulse_handle_t impulse_handle_711824_0 = ei_impulse_handle_t( &impulse_711824_0 );
ei_impulse_handle_t& ei_default_impulse = impulse_handle_711824_0;

#endif // _EI_CLASSIFIER_MODEL_VARIABLES_H_
